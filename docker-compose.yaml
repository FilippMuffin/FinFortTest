version: "3.9"
services:

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: finfort-php
    container_name: finfort-php
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - db
    volumes:
      - ./:/var/www
      - ./docker/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/php/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - finfort-network

  db:
    image: mysql:8.0.27
    container_name: finfort-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
    ports:
      - '${DOCKER_DATABASE_PORT}:3306'
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d
      - db:/var/lib/mysql
    networks:
      - finfort-network

  nginx:
    image: nginx:1.17-alpine
    container_name: finfort-nginx
    restart: unless-stopped
    ports:
      - '${DOCKER_WEBSERVER_PORT}:80'
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - finfort-network

  rabbitmq:
    container_name: finfort-rabbit
    image: rabbitmq:3.7-management
    volumes:
      - ./rabbitmq-persistence:/bitnami
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - finfort-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  finfort-network:
    driver: bridge

volumes:
  db:
    driver: local

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
